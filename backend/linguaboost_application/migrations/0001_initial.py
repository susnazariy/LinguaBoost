# Generated by Django 5.1.6 on 2025-03-27 09:32

import django.db.models.deletion
import django.utils.timezone
import phonenumber_field.modelfields
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='AccordanceTask',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name': 'Accordance tasks',
                'verbose_name_plural': 'Accordance tasks',
                'db_table': 'accordance_tasks',
                'ordering': ['id'],
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='WebsiteInformation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('website_name', models.CharField(max_length=30)),
                ('website_address', models.CharField(max_length=150)),
                ('google_map', models.TextField()),
                ('website_phone_number', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, region=None, unique=True)),
                ('website_email', models.EmailField(blank=True, max_length=100, null=True, unique=True)),
                ('website_facebook', models.TextField()),
                ('website_linkedin', models.TextField()),
                ('website_instagram', models.TextField()),
            ],
            options={
                'verbose_name': 'Website information',
                'verbose_name_plural': 'Website information',
                'db_table': 'website_information',
                'ordering': ['website_name'],
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('account_type', models.CharField(choices=[('Адміністратор', 'Адміністратор'), ('Викладач', 'Викладач'), ('Учень', 'Учень')], default='Учень', max_length=20)),
                ('username', models.CharField(max_length=30, unique=True, verbose_name='username')),
                ('email', models.EmailField(max_length=255, unique=True, verbose_name='email address')),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, region=None)),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('patronymic', models.CharField(max_length=50)),
                ('birthday', models.DateField(blank=True, null=True)),
                ('image', models.ImageField(blank=True, default='images/profile_images/no_photo.jpg', null=True, upload_to='images/profile_images/')),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Users',
                'verbose_name_plural': 'Users',
            },
        ),
        migrations.CreateModel(
            name='AccordanceTaskVariant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_variant', models.CharField(max_length=255)),
                ('second_variant', models.CharField(max_length=255)),
                ('accordance_task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='accordance_task_variants_info', to='linguaboost_application.accordancetask')),
            ],
            options={
                'verbose_name': 'Accordance task variants',
                'verbose_name_plural': 'Accordance task variants',
                'db_table': 'accordance_task_variants',
                'ordering': ['id'],
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('course_name', models.CharField(max_length=255)),
                ('creation_date', models.DateField(default=django.utils.timezone.now)),
                ('course_description', models.TextField()),
                ('course_image', models.ImageField(blank=True, default='images/course_images/no_photo.jpg', null=True, upload_to='images/course_images/')),
                ('difficult_level', models.CharField(choices=[('★★★', '★★★'), ('★★', '★★'), ('★', '★')], default='★', max_length=3)),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='courses_info', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Courses',
                'verbose_name_plural': 'Courses',
                'db_table': 'courses',
                'ordering': ['creator', 'id'],
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='CourseFinalTestResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('test_datetime', models.DateTimeField(default=django.utils.timezone.now, null=True)),
                ('number_of_tests', models.PositiveIntegerField()),
                ('test_result', models.PositiveIntegerField()),
                ('is_successfully_passed', models.BooleanField()),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='course_final_test_results', to='linguaboost_application.course')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='course_final_test_results', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Course final test results',
                'verbose_name_plural': 'Course final test results',
                'db_table': 'course_final_test_results',
                'ordering': ['id'],
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Lesson',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lesson_name', models.CharField(max_length=255)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lessons_info', to='linguaboost_application.course')),
            ],
            options={
                'verbose_name': 'Lessons',
                'verbose_name_plural': 'Lessons',
                'db_table': 'lessons',
                'ordering': ['course', 'id'],
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='FixSentenceTask',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('correct_text', models.TextField()),
                ('bad_text', models.TextField()),
                ('lesson', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fix_sentence_tasks_info', to='linguaboost_application.lesson')),
            ],
            options={
                'verbose_name': 'Fix sentence tasks',
                'verbose_name_plural': 'Fix sentence tasks',
                'db_table': 'fix_sentence_tasks',
                'ordering': ['id'],
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='DiscussionExercise',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, default='images/exercise_images/no_photo.jpg', null=True, upload_to='images/exercise_images/')),
                ('first_question', models.CharField()),
                ('second_question', models.CharField()),
                ('third_question', models.CharField()),
                ('fourth_question', models.CharField()),
                ('lesson', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='discussion_exercises_info', to='linguaboost_application.lesson')),
            ],
            options={
                'verbose_name': 'Discussion exercises',
                'verbose_name_plural': 'Discussion exercises',
                'db_table': 'discussion_exercises',
                'ordering': ['id'],
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='accordancetask',
            name='lesson',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='accordance_tasks_info', to='linguaboost_application.lesson'),
        ),
        migrations.CreateModel(
            name='LessonTestResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('test_datetime', models.DateTimeField(default=django.utils.timezone.now, null=True)),
                ('number_of_tests', models.PositiveIntegerField()),
                ('test_result', models.PositiveIntegerField()),
                ('is_successfully_passed', models.BooleanField()),
                ('lesson', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lesson_test_results', to='linguaboost_application.lesson')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lesson_test_results', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Lesson test results',
                'verbose_name_plural': 'Lesson test results',
                'db_table': 'lesson_test_results',
                'ordering': ['id'],
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ListeningExercise',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField()),
                ('audio', models.FileField(blank=True, default='audio/no_audio.mp3', null=True, upload_to='audio/')),
                ('text', models.TextField()),
                ('lesson', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='listening_exercises_info', to='linguaboost_application.lesson')),
            ],
            options={
                'verbose_name': 'Listening exercises',
                'verbose_name_plural': 'Listening exercises',
                'db_table': 'listening_exercises',
                'ordering': ['id'],
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='OneManyTask',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('correct_answer', models.CharField(max_length=255)),
                ('first_wrong_answer', models.CharField(max_length=255)),
                ('second_wrong_answer', models.CharField(max_length=255)),
                ('third_wrong_answer', models.CharField(max_length=255)),
                ('lesson', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='one_many_tasks_info', to='linguaboost_application.lesson')),
            ],
            options={
                'verbose_name': 'One many tasks',
                'verbose_name_plural': 'One many tasks',
                'db_table': 'one_many_tasks',
                'ordering': ['id'],
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ReadingExercise',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, default='images/exercise_images/no_photo.jpg', null=True, upload_to='images/exercise_images/')),
                ('text', models.TextField()),
                ('lesson', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reading_exercises_info', to='linguaboost_application.lesson')),
            ],
            options={
                'verbose_name': 'Reading exercises',
                'verbose_name_plural': 'Reading exercises',
                'db_table': 'reading_exercises',
                'ordering': ['id'],
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='RulesExercise',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, default='images/exercise_images/no_photo.jpg', null=True, upload_to='images/exercise_images/')),
                ('text', models.TextField()),
                ('lesson', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rules_exercises_info', to='linguaboost_application.lesson')),
            ],
            options={
                'verbose_name': 'Rules exercises',
                'verbose_name_plural': 'Rules exercises',
                'db_table': 'rules_exercises',
                'ordering': ['id'],
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='SequenceTask',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sequence_text', models.TextField()),
                ('lesson', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sequence_tasks_info', to='linguaboost_application.lesson')),
            ],
            options={
                'verbose_name': 'Sequence tasks',
                'verbose_name_plural': 'Sequence tasks',
                'db_table': 'sequence_tasks',
                'ordering': ['id'],
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='StudentApplication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('application_datetime', models.DateTimeField(default=django.utils.timezone.now, null=True)),
                ('application_status', models.CharField(choices=[('В обробці', 'В обробці'), ('Підтверджено', 'Підтверджено'), ('Відхилено', 'Відхилено')], default='В обробці', max_length=20)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student_applications_info', to='linguaboost_application.course')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student_applications_info', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Student applications',
                'verbose_name_plural': 'Student applications',
                'db_table': 'student_applications',
                'ordering': ['application_status', '-application_datetime'],
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='StudentCourse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student_courses_info', to='linguaboost_application.course')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student_courses_info', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Student courses',
                'verbose_name_plural': 'Student courses',
                'db_table': 'student_courses',
                'ordering': ['student'],
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TranslateWordTask',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('english_word', models.CharField(max_length=255)),
                ('ukrainian_word', models.CharField(max_length=255)),
                ('lesson', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='translate_word_tasks_info', to='linguaboost_application.lesson')),
            ],
            options={
                'verbose_name': 'Translate word tasks',
                'verbose_name_plural': 'Translate word tasks',
                'db_table': 'translate_word_tasks',
                'ordering': ['id'],
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='VocabularyExercise',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lesson', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vocabulary_exercises_info', to='linguaboost_application.lesson')),
            ],
            options={
                'verbose_name': 'Vocabulary exercises',
                'verbose_name_plural': 'Vocabulary exercises',
                'db_table': 'vocabulary_exercises',
                'ordering': ['id'],
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='VocabularyWord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('english_word', models.CharField(max_length=255)),
                ('ukrainian_word', models.CharField(max_length=255)),
                ('transcription', models.CharField(max_length=255)),
                ('vocabulary_exercise', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vocabulary_words_info', to='linguaboost_application.vocabularyexercise')),
            ],
            options={
                'verbose_name': 'Vocabulary words',
                'verbose_name_plural': 'Vocabulary words',
                'db_table': 'vocabulary_words',
                'ordering': ['id'],
                'managed': True,
            },
        ),
    ]
